@model MRT.ViewModels.CarrierFormViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container px-2">
    <h3><i class="fas fa-edit mr-2"></i>@Model.Title</h3>
    <hr />
    <div class="card card-form-background">
        @using (Html.BeginForm("Save", "Carriers", FormMethod.Post, new { @id = "carrier-form", @data_carrier_id = Model.Id }))
        {
        <div class="row">
            <div class="col-md-6">
                <div class="card-body">
                    <div class="row form-group">
                        <div class="col-10">
                            @Html.LabelFor(m => m.Name, new { @class = "font-weight-bold" })
                        </div>
                        <div class="col-2 text-right">
                            <i id="carrier-popover-name" data-toggle="popover" class="fas fa-info-circle info-icon"></i>
                        </div>
                        <div class="col">
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control px-2" })
                            @Html.ValidationMessageFor(m => m.Name)
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-10">
                            @Html.LabelFor(m => m.BaseRate, new { @class = "font-weight-bold" })
                        </div>
                        <div class="col-2 text-right">
                            <i id="carrier-popover-baserate" data-toggle="popover" class="fas fa-info-circle info-icon"></i>
                        </div>
                        <div class="col">
                            @Html.TextBoxFor(m => m.BaseRate, new { @class = "form-control px-2" })
                            @Html.ValidationMessageFor(m => m.BaseRate)
                        </div>
                    </div>
                    @if (Model.Id != 0)
                    {
                    <div class="form-group" id="state-assignment-section">
                        <label class="font-weight-bold mb-3">States Covered</label>
                        <div id="states-accordion">
                            <div class="card">
                                <a href="#states-covered-collapse" class="card-header text-center" data-toggle="collapse" data-parent="#states-accordion">
                                    States Currently Covered<i id="states-covered-collapse-icon" class="fas fa-arrow-circle-up ml-2"></i>
                                </a>
                                <div id="states-covered-collapse" class="collapse states-collapse show">
                                    <ul id="covered-list" class="list-group list-group-flush">
                                        @if (Model.StatesCovered.Count != 0)
                                        {
                                            foreach (var state in Model.StatesCovered)
                                            {
                                                <li class="list-group-item py-1" data-state-id=@state.Id>
                                                    @state.Name
                                                    <a href="#" class="covered float-right"><i class="fas fa-minus"></i></a>
                                                </li>
                                            }
                                        }
                                        else
                                        {
                                            <li class="list-group-item">No states are currently covered</li>
                                        }
                                    </ul>
                                </div>
                                <a href="#new-state-collapse" class="card-header text-center border-top" data-toggle="collapse" data-parent="#states-accordion">
                                    Add State Coverage<i id="new-state-collapse-icon" class="fas fa-arrow-circle-down ml-2"></i>
                                </a>
                                <div id="new-state-collapse" class="collapse states-collapse">
                                    <ul id="not-covered-list" class="list-group list-group-flush">
                                        @if (Model.StatesNotCovered.Count != 0)
                                        {
                                            foreach (var state in Model.StatesNotCovered)
                                            {
                                                <li class="list-group-item py-1" data-state-id=@state.Id>
                                                    @state.Name
                                                    <a href="#" class="not-covered float-right">
                                                        <i class="fas fa-plus"></i>
                                                    </a>
                                                </li>
                                            }
                                        }
                                        else
                                        {
                                            <li class="list-group-item">No states are available for coverage</li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                    }
                </div>
            </div>
            <div class="col-sm-12">
                @Html.HiddenFor(m => m.Id)
                @Html.AntiForgeryToken()
                <div class="card-footer">
                    <div class="row">
                        <div class="col-sm-2 ml-sm-auto">
                            <button type="submit" id="carrier-form-submit" class="btn btn-info btn-block">
                                <i class="far fa-save mr-2"></i>Save
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        }
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/App/Carriers/CarrierForm.js")
}